<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Rails Development</title>
    <link>https://trevordjones.github.io/cheatsheets/post/</link>
    <description>Recent content in Posts on Rails Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Aug 2016 17:26:29 -0400</lastBuildDate>
    <atom:link href="https://trevordjones.github.io/cheatsheets/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Install Bootstrap</title>
      <link>https://trevordjones.github.io/cheatsheets/post/install-bootstrap/</link>
      <pubDate>Tue, 02 Aug 2016 17:26:29 -0400</pubDate>
      
      <guid>https://trevordjones.github.io/cheatsheets/post/install-bootstrap/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Add ‘bootstrap-sass’ anywhere in your Gemfile.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Inside your terminal (make sure you’re in the folder where your Rails app is), run: bundle&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Inside &lt;code&gt;app/assets/stylesheets&lt;/code&gt;, create a new file called &lt;code&gt;_external.css.scss&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add these lines to that file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;@import &amp;quot;bootstrap-sprockets&amp;quot;;
@import &amp;quot;bootstrap&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Inside &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt;, add this line under the line that says &lt;code&gt;//=require jquery&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//= require bootstrap-sprockets
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If your rails server was already running, restart it.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Terminal Commands</title>
      <link>https://trevordjones.github.io/cheatsheets/post/terminal/</link>
      <pubDate>Tue, 02 Aug 2016 17:25:54 -0400</pubDate>
      
      <guid>https://trevordjones.github.io/cheatsheets/post/terminal/</guid>
      <description>

&lt;h3 id=&#34;commands&#34;&gt;Commands&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls # list directory contents

$ ls -l # list directory contents as a list (one per line)

$ ls -la # list directory contents as well as hidden files (files that begin with a &#39;.&#39;)

$ cd &#39;directory_name&#39; # change into the given directory

$ cd .. # cd out of the current directory - one level

$ cd ../.. # cd out two levels

$ cd ~ # go to home directory (should be your computer username)

$ cd / # go to root directory

$ mkdir &#39;directory_name&#39; # create directory

$ rm # remove file
$ rmdir # remove directory - will only work if directory is empty
$ rm -rf &#39;directory_name&#39; # remove directory and ALL it&#39;s contents. Be warned when using this - you will not be prompted to continue. It will just wipe it out.

$ touch &#39;file_name&#39; # create a file with the name you give it

$ pwd # Get complete file path

$ cat &#39;file_name&#39; # print contents of the file to the terminal

$ echo &#39;add this text&#39; &amp;gt;&amp;gt; &#39;file_name.txt&#39; # Add text to a file
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;hotkeys&#34;&gt;Hotkeys&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Tab - Autocomplete to file path. You just need to type the first letter or two and then it will complete&lt;/li&gt;
&lt;li&gt;Up/Down Arrow - See command history&lt;/li&gt;
&lt;li&gt;CTRL + r &amp;lsquo;previous command&amp;rsquo; - Search command history&lt;/li&gt;
&lt;li&gt;CTRL + l - clears the screen but does not get rid of session history&lt;/li&gt;
&lt;li&gt;CMD + k - clears the screen and does get rid of session history&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Active Record Methods</title>
      <link>https://trevordjones.github.io/cheatsheets/post/active-record-methods/</link>
      <pubDate>Tue, 02 Aug 2016 17:25:07 -0400</pubDate>
      
      <guid>https://trevordjones.github.io/cheatsheets/post/active-record-methods/</guid>
      <description>&lt;p&gt;Substitue &amp;ldquo;Model&amp;rdquo; with your model:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;Model.first
# find the first record

Model.last
# find the last record

Model.find_by(attribute: &#39;value&#39;)
# find the record by a specific attribute

Model.order(:attribute)
# order the records by the attribute - ascending is default

Model.order(:attribute :desc)
# order the records by the attribute, use descending order

Model.where(attribute: &#39;value&#39;)
# returns all records where the attribute equals the given value

Model.where(&#39;attribute &amp;gt; ?&#39;, &#39;value&#39;)
# returns all records where the attribute is greater than the given value

Model.where(&#39;attribute LIKE ?&#39;, &#39;%value%&#39;)
# returns all records where the attribute is similar to the value. The % sign on each side means anything can be before or after - very general search

Model.where(&#39;attribute LIKE ? AND other = ?&#39;, &#39;%value%&#39;, &#39;other_value&#39;)
# returns all records where the attribute is similar to the value AND other is equal to the other value

Model.where(&#39;attribute LIKE? OR other = ?&#39;, &#39;%value%&#39;, &#39;other_value&#39;)
# returns all records where the attribute is similar to the value OR other is equal the other value
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Github Cheatsheet</title>
      <link>https://trevordjones.github.io/cheatsheets/post/github-cheatsheet/</link>
      <pubDate>Mon, 01 Aug 2016 13:48:13 -0400</pubDate>
      
      <guid>https://trevordjones.github.io/cheatsheets/post/github-cheatsheet/</guid>
      <description>

&lt;p&gt;Repositories are often called Repos.&lt;/p&gt;

&lt;p&gt;You have a local repo (on your computer) and a remote repo (on Github).&lt;/p&gt;

&lt;p&gt;You should first have a local repo.&lt;/p&gt;

&lt;p&gt;Then create a remote repo by going to Github. You will either see a button to create one, or click the &amp;ldquo;+&amp;rdquo; sign at the top of the page and create one there. This page will have instructions for you. You&amp;rsquo;ll need to copy the correct command.&lt;/p&gt;

&lt;h2 id=&#34;push-to-remote-repo&#34;&gt;Push to Remote Repo&lt;/h2&gt;

&lt;p&gt;Return to your local repo and paste the command. It will look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git remote add origin &amp;quot;your-remote-repo-url&amp;quot; # will look like git@github.com:username/repo-name.git
$ git add --all
$ git commit -m &amp;quot;commit message&amp;quot;
# Then you can push to your remote repo
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;clone&#34;&gt;Clone&lt;/h2&gt;

&lt;p&gt;If you go to a Github repo you can clone it - you can click &amp;ldquo;Clone or Download&amp;rdquo;, copy the url (be sure you select clone with SSH). &lt;code&gt;cd&lt;/code&gt; into the directory you want this repo to live.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone &amp;quot;the-copied-git-url&amp;quot; # it will look like git@github.com:username/repo-name.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;fork&#34;&gt;Fork&lt;/h2&gt;

&lt;p&gt;The top right of any Github repo will have an option to &amp;ldquo;Fork&amp;rdquo; it in the top right corner. You will then be presented with an option to fork to your personal account or any organizations you have permissions to.&lt;/p&gt;

&lt;p&gt;Once it&amp;rsquo;s in your or your organizations account, you can follow the Clone directions above.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git Cheatsheet</title>
      <link>https://trevordjones.github.io/cheatsheets/post/git-cheatsheet/</link>
      <pubDate>Sun, 31 Jul 2016 15:37:55 -0400</pubDate>
      
      <guid>https://trevordjones.github.io/cheatsheets/post/git-cheatsheet/</guid>
      <description>&lt;p&gt;Tell git to track the folder you are currently in (be sure to &lt;code&gt;cd&lt;/code&gt; into it):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Only need to do this once.&lt;/p&gt;

&lt;p&gt;Made changes to your project:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git add --all
$ git commit -m &amp;quot;your message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here are some extra commands you can play with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git status
# see which files are being tracked and which are not

$ git log
# Check your log of commits

$ git diff file_name
# See the changes of the files
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>