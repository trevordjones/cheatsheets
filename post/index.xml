<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Rails Development</title>
    <link>https://trevordjones.github.io/cheatsheets/post/</link>
    <description>Recent content in Posts on Rails Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Aug 2016 13:48:13 -0400</lastBuildDate>
    <atom:link href="https://trevordjones.github.io/cheatsheets/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Github Cheatsheet</title>
      <link>https://trevordjones.github.io/cheatsheets/post/github-cheatsheet/</link>
      <pubDate>Mon, 01 Aug 2016 13:48:13 -0400</pubDate>
      
      <guid>https://trevordjones.github.io/cheatsheets/post/github-cheatsheet/</guid>
      <description>

&lt;p&gt;Repositories are often called Repos.&lt;/p&gt;

&lt;p&gt;You have a local repo (on your computer) and a remote repo (on Github).&lt;/p&gt;

&lt;p&gt;You should first have a local repo.&lt;/p&gt;

&lt;p&gt;Then create a remote repo by going to Github. You will either see a button to create one, or click the &amp;ldquo;+&amp;rdquo; sign at the top of the page and create one there. This page will have instructions for you. You&amp;rsquo;ll need to copy the correct command.&lt;/p&gt;

&lt;h2 id=&#34;push-to-remote-repo&#34;&gt;Push to Remote Repo&lt;/h2&gt;

&lt;p&gt;Return to your local repo and paste the command. It will look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git remote add origin &amp;quot;your-remote-repo-url&amp;quot; # will look like git@github.com:username/repo-name.git
$ git add --all
$ git commit -m &amp;quot;commit message&amp;quot;
# Then you can push to your remote repo
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;clone&#34;&gt;Clone&lt;/h2&gt;

&lt;p&gt;If you go to a Github repo you can clone it - you can click &amp;ldquo;Clone or Download&amp;rdquo;, copy the url (be sure you select clone with SSH). &lt;code&gt;cd&lt;/code&gt; into the directory you want this repo to live.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone &amp;quot;the-copied-git-url&amp;quot; # it will look like git@github.com:username/repo-name.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;fork&#34;&gt;Fork&lt;/h2&gt;

&lt;p&gt;The top right of any Github repo will have an option to &amp;ldquo;Fork&amp;rdquo; it in the top right corner. You will then be presented with an option to fork to your personal account or any organizations you have permissions to.&lt;/p&gt;

&lt;p&gt;Once it&amp;rsquo;s in your or your organizations account, you can follow the Clone directions above.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git Cheatsheet</title>
      <link>https://trevordjones.github.io/cheatsheets/post/git-cheatsheet/</link>
      <pubDate>Sun, 31 Jul 2016 15:37:55 -0400</pubDate>
      
      <guid>https://trevordjones.github.io/cheatsheets/post/git-cheatsheet/</guid>
      <description>&lt;p&gt;Tell git to track the folder you are currently in (be sure to &lt;code&gt;cd&lt;/code&gt; into it):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Only need to do this once.&lt;/p&gt;

&lt;p&gt;Made changes to your project:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git add --all
$ git commit -m &amp;quot;your message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here are some extra commands you can play with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git status
# see which files are being tracked and which are not

$ git log
# Check your log of commits

$ git diff file_name
# See the changes of the files
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>